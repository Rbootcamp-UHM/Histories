myfunc <- function(x) {  x+1 }
myfunc( 1 )
myfunc( 1000 )
summary
summary.lm
myfunc <- function(x,y) {  x*y }
myfunc( 1000 )
myfunc( 1000, 2 )
x <- sample( 1:5, 20, rep=T)
x
x == 1
ones <- (x==1)
x[ ones ]
x[ ones ] <- 0
x
iris$Species
color <- c("red", "blue", "black")
as.numeric(iris$Species)
color [ as.numeric(iris$Species) ]
x > 2
which( x > 2)
L1 <- list( x= 5, y = sample(1:5, 20, rep=T), z=data.frame(x,y))
x= 5
y = sample(1:5, 20, rep=T)
z=data.frame(x,y)
L1 <- list( x, y, z)
L1
L1 <- list( x=x, y=y, z=z)
L1
class(L1)
L1[1]
class(L1[1])
L1[[1]]
class(L1[[1]])
L1[[3]]
L1[3]
L1[2:3]
L1[ c(1,3)]
L1[[ c(1,3) ]]
L1[ c(1,3)]
color [ as.numeric(iris$Species) ]
iris$Species
as.numeric(iris$Species)
color <- c("black", "blue", "purple")
color [ as.numeric(iris$Species) ]
irismix <- sample( iris$Species, length(iris$Species), rep=F)
irismix
color [ as.numeric( irismix ) ]
cbind( as.character(irismix), color [ as.numeric( irismix ) ])
require(geiger)#
data(geospiza)   # load the dataset into the workspace#
ls()               # list the objects in the workspace
geo <- geospiza$geospiza.data
geo
sp <- rownames(geo)
sp
grep(pattern = "p", x = sp)
x
sp
oo <- grep(pattern = "p", x = sp)
sp[ oo ]
oo <- grep(pattern = "pa", x = sp)
sp[ oo ]
grep(pattern = "pa", x = sp, value=T)
grep("^P", sp, value=T)
sub(pattern = "^P", replacement = "p", sp)
grep(pattern = "g", x = sp, value=T)
sort( rownames(geo))
geo[ sort( rownames(geo)), ]
order(rownames(geo))
geo
order(rownames(geo))
oo <- order(rownames(geo))
geo[oo, ]
oo <- order(sp , geo$tarsusL) # order by first letter species, then tarsusL
oo <- order(sp , geo[,"tarsusL"]) # order by first letter species, then tarsusL
geo[oo,]
geot <- geo[oo,][,"tarsusL"]
geot
